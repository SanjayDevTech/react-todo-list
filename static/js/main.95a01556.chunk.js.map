{"version":3,"sources":["components/StyledButton.tsx","components/Todo.tsx","components/StyledInput.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","props","color","bg","Todo","todo","index","updateTodo","deleteTodo","className","id","title","onClick","StyledInput","input","App","useState","text","setText","count","setCount","todos","setTodos","curTodos","splice","trim","placeholder","onChange","e","target","value","curText","push","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wbAOA,IASeA,EATMC,IAAOC,OAAV,KACP,SAAAC,GAAK,OAAIA,EAAMC,OAAS,WACb,SAAAD,GAAK,OAAIA,EAAME,IAAM,WCW5BC,EAVmB,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAA3B,OAChC,qBAAIC,UAAU,WAAd,UACA,sBAAKA,UAAU,mBAAf,cACEJ,EAAKK,GADP,IACYL,EAAKM,SAEjB,eAAC,EAAD,CAAcT,MAAM,QAAQC,GAAG,SAASS,QAAS,kBAAML,EAAWD,IAAlE,qBAAmFD,EAAKK,MACxF,eAAC,EAAD,CAAcP,GAAG,MAAMS,QAAS,kBAAMJ,EAAWF,IAAjD,qBAAkED,EAAKK,U,6HCfzE,IAMeG,EANKd,IAAOe,MAAV,KCyDFC,EApDH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEUF,mBAAS,GAFnB,mBAETG,EAFS,KAEFC,EAFE,OAGUJ,mBAAS,CAAC,CAACN,GAAI,EAAGC,MAAO,YAHnC,mBAGTU,EAHS,KAGFC,EAHE,KAkBZd,EAAa,SAACF,GAChB,IAAMiB,EAAQ,YAAOF,GACrBE,EAASC,OAAOlB,EAAO,GACvBgB,EAASC,IAGPhB,EAAa,SAACD,GAChB,KAAoB,KAAhBW,EAAKQ,QAAiBnB,EAAQ,GAAlC,CAGA,IAAMiB,EAAQ,YAAOF,GACrBE,EAASjB,GAAOK,MAAQM,EACxBK,EAASC,GACTL,EAAQ,MAGV,OACE,sBAAKT,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,sBACA,uBAAMA,UAAU,WAAhB,UACA,gCACA,cAAC,EAAD,CAAaiB,YAAY,oBAAoBC,SAAU,SAACC,GAAD,OAAOV,EAAQU,EAAEC,OAAOC,QAAQA,MAAOb,IAC9F,eAAC,EAAD,CAAcd,GAAG,QAAQS,QApCf,WACZ,IAAMmB,EAAUd,EAChB,GAAuB,KAAnBc,EAAQN,OAAZ,CAIA,IAAMF,EAAQ,YAAOF,GAErBE,EAASS,KAAK,CAACtB,GAAIS,EAAOR,MAAOoB,IACjCT,EAASC,GACTH,EAASD,EAAM,GACfD,EAAQ,MAyBN,kBAAiDC,QAEjD,oBAAIV,UAAU,qBAAd,SACCY,EAAMY,KAAI,SAAC5B,EAAMC,GAAP,OACT,cAAC,EAAD,CAAoBC,WAAYA,EAAYC,WAAYA,EAAYH,KAAMA,EAAMC,MAAOA,GAA5ED,EAAKK,gBCtCTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95a01556.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface Props {\n  color?: string;\n  bg?: string;\n}\n\nconst StyledButton = styled.button<Props>`\n  color: ${props => props.color || \"white\"};\n  background-color: ${props => props.bg || \"green\"};\n  border: none;\n  font-size: 20px;\n  margin: 8px;\n  padding: 4px;\n`;\n\nexport default StyledButton;\n","import '../App.css';\nimport StyledButton from './StyledButton';\n\ninterface TodoProps {\n  todo: {id: number, title: string};\n  index: number;\n  updateTodo: (index: number) => void;\n  deleteTodo: (index: number) => void;\n}\n\nconst Todo: React.FC<TodoProps> = ({todo, index, updateTodo, deleteTodo}) => (\n  <li className=\"App-item\">\n  <div className=\"App-item-content\">\n  #{todo.id} {todo.title}\n  </div>\n  <StyledButton color=\"black\" bg=\"orange\" onClick={() => updateTodo(index)}>Update #{todo.id}</StyledButton>\n  <StyledButton bg=\"red\" onClick={() => deleteTodo(index)}>Delete #{todo.id}</StyledButton>\n  </li>\n);\n\nexport default Todo;\n","import styled from \"styled-components\";\nconst StyledInput = styled.input`\n  font-size: 18px;\n  padding: 10px;\n  margin: 8px;\n`;\n\nexport default StyledInput;\n","import './App.css';\nimport { useState } from 'react';\nimport StyledButton from './components/StyledButton';\nimport Todo from './components/Todo';\nimport StyledInput from './components/StyledInput';\n\nconst App = () => {\n  const [text, setText] = useState(\"\");\n  const [count, setCount] = useState(1);\n  const [todos, setTodos] = useState([{id: 0, title: \"Sanjay\"}]);\n  let addTodo = () => {\n    const curText = text;\n    if (curText.trim() === \"\") {\n      // console.log(\"Empty field\");\n      return;\n    }\n    const curTodos = [...todos];\n    // console.log(curTodos);\n    curTodos.push({id: count, title: curText});\n    setTodos(curTodos);\n    setCount(count+1);\n    setText(\"\");\n  }\n\n  let deleteTodo = (index: number) => {\n    const curTodos = [...todos];\n    curTodos.splice(index, 1);\n    setTodos(curTodos);\n  }\n\n  let updateTodo = (index: number) => {\n    if (text.trim() === \"\" || index < 0) {\n      return;\n    }\n    const curTodos = [...todos];\n    curTodos[index].title = text;\n    setTodos(curTodos);\n    setText(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Todolist</header>\n      <main className=\"App-body\">\n      <div>\n      <StyledInput placeholder=\"Type something...\" onChange={(e) => setText(e.target.value)} value={text}/>\n      <StyledButton bg=\"green\" onClick={addTodo}>Add #{count}</StyledButton>\n      </div>\n      <ul className=\"App-list-container\">\n      {todos.map((todo, index) => (\n        <Todo key={todo.id} updateTodo={updateTodo} deleteTodo={deleteTodo} todo={todo} index={index}/>\n      ))}\n      </ul>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}